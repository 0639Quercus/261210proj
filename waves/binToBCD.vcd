$date
	Sat Oct 08 12:20:43 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module binToBCDSTIM $end
$var wire 4 ! BCD1 [3:0] $end
$var wire 4 " BCD0 [3:0] $end
$var reg 6 # L [5:0] $end
$scope module converter $end
$var wire 6 $ bin [5:0] $end
$var wire 4 % e [3:0] $end
$var wire 4 & d [3:0] $end
$var wire 4 ' c [3:0] $end
$var wire 4 ( TEN [3:0] $end
$var wire 4 ) ONE [3:0] $end
$scope module a1 $end
$var wire 4 * in [3:0] $end
$var reg 4 + out [3:0] $end
$upscope $end
$scope module a2 $end
$var wire 4 , in [3:0] $end
$var reg 4 - out [3:0] $end
$upscope $end
$scope module a3 $end
$var wire 4 . in [3:0] $end
$var reg 4 / out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#1
b1 "
b1 )
b1 #
b1 $
#2
b1 %
b1 /
b10 "
b10 )
b1 .
b10 #
b10 $
#3
b11 "
b11 )
b11 #
b11 $
#4
b1 &
b1 -
b10 %
b10 /
b100 "
b100 )
b1 ,
b10 .
b100 #
b100 $
#5
b101 "
b101 )
b101 #
b101 $
#6
b11 %
b11 /
b110 "
b110 )
b11 .
b110 #
b110 $
#7
b111 "
b111 )
b111 #
b111 $
#8
b1 '
b1 +
b10 &
b10 -
b100 %
b100 /
b1000 "
b1000 )
b1 *
b10 ,
b100 .
b1000 #
b1000 $
#9
b1001 "
b1001 )
b1001 #
b1001 $
#10
b1 !
b1 (
b1000 %
b1000 /
b0 "
b0 )
b101 .
b1010 #
b1010 $
#11
b1 "
b1 )
b1011 #
b1011 $
#12
b1 !
b1 (
b11 &
b11 -
b1001 %
b1001 /
b10 "
b10 )
b11 ,
b110 .
b1100 #
b1100 $
#13
b11 "
b11 )
b1101 #
b1101 $
#14
b1010 %
b1010 /
b100 "
b100 )
b111 .
b1110 #
b1110 $
#15
b101 "
b101 )
b1111 #
b1111 $
#16
b1 !
b1 (
b10 '
b10 +
b100 &
b100 -
b1011 %
b1011 /
b110 "
b110 )
b10 *
b100 ,
b1000 .
b10000 #
b10000 $
#17
b111 "
b111 )
b10001 #
b10001 $
#18
b1100 %
b1100 /
b1000 "
b1000 )
b1001 .
b10010 #
b10010 $
#19
b1001 "
b1001 )
b10011 #
b10011 $
#20
b10 !
b10 (
b1000 &
b1000 -
b0 %
b0 /
b0 "
b0 )
b101 ,
b0 .
b10100 #
b10100 $
#21
b1 "
b1 )
b10101 #
b10101 $
#22
b1 %
b1 /
b10 "
b10 )
b1 .
b10110 #
b10110 $
#23
b11 "
b11 )
b10111 #
b10111 $
#24
b10 !
b10 (
b11 '
b11 +
b1001 &
b1001 -
b10 %
b10 /
b100 "
b100 )
b11 *
b110 ,
b10 .
b11000 #
b11000 $
#25
b101 "
b101 )
b11001 #
b11001 $
#26
b11 %
b11 /
b110 "
b110 )
b11 .
b11010 #
b11010 $
#27
b111 "
b111 )
b11011 #
b11011 $
#28
b1010 &
b1010 -
b100 %
b100 /
b1000 "
b1000 )
b111 ,
b100 .
b11100 #
b11100 $
#29
b1001 "
b1001 )
b11101 #
b11101 $
#30
b11 !
b11 (
b1000 %
b1000 /
b0 "
b0 )
b101 .
b11110 #
b11110 $
#31
b1 "
b1 )
b11111 #
b11111 $
#32
b11 !
b11 (
b100 '
b100 +
b1011 &
b1011 -
b1001 %
b1001 /
b10 "
b10 )
b100 *
b1000 ,
b110 .
b100000 #
b100000 $
#33
b11 "
b11 )
b100001 #
b100001 $
#34
b1010 %
b1010 /
b100 "
b100 )
b111 .
b100010 #
b100010 $
#35
b101 "
b101 )
b100011 #
b100011 $
#36
b1100 &
b1100 -
b1011 %
b1011 /
b110 "
b110 )
b1001 ,
b1000 .
b100100 #
b100100 $
#37
b111 "
b111 )
b100101 #
b100101 $
#38
b1100 %
b1100 /
b1000 "
b1000 )
b1001 .
b100110 #
b100110 $
#39
b1001 "
b1001 )
b100111 #
b100111 $
#40
b100 !
b100 (
b1000 '
b1000 +
b0 &
b0 -
b0 %
b0 /
b0 "
b0 )
b101 *
b0 ,
b0 .
b101000 #
b101000 $
#41
b1 "
b1 )
b101001 #
b101001 $
#42
b1 %
b1 /
b10 "
b10 )
b1 .
b101010 #
b101010 $
#43
b11 "
b11 )
b101011 #
b101011 $
#44
b1 &
b1 -
b10 %
b10 /
b100 "
b100 )
b1 ,
b10 .
b101100 #
b101100 $
#45
b101 "
b101 )
b101101 #
b101101 $
#46
b11 %
b11 /
b110 "
b110 )
b11 .
b101110 #
b101110 $
#47
b111 "
b111 )
b101111 #
b101111 $
#48
b1001 '
b1001 +
b10 &
b10 -
b100 %
b100 /
b1000 "
b1000 )
b110 *
b10 ,
b100 .
b110000 #
b110000 $
#49
b1001 "
b1001 )
b110001 #
b110001 $
#50
b101 !
b101 (
b1000 %
b1000 /
b0 "
b0 )
b101 .
b110010 #
b110010 $
#51
b1 "
b1 )
b110011 #
b110011 $
#52
b101 !
b101 (
b11 &
b11 -
b1001 %
b1001 /
b10 "
b10 )
b11 ,
b110 .
b110100 #
b110100 $
#53
b11 "
b11 )
b110101 #
b110101 $
#54
b1010 %
b1010 /
b100 "
b100 )
b111 .
b110110 #
b110110 $
#55
b101 "
b101 )
b110111 #
b110111 $
#56
b101 !
b101 (
b1010 '
b1010 +
b100 &
b100 -
b1011 %
b1011 /
b110 "
b110 )
b111 *
b100 ,
b1000 .
b111000 #
b111000 $
#57
b111 "
b111 )
b111001 #
b111001 $
#58
b1100 %
b1100 /
b1000 "
b1000 )
b1001 .
b111010 #
b111010 $
#59
b1001 "
b1001 )
b111011 #
b111011 $
#60
b110 !
b110 (
b1000 &
b1000 -
b0 %
b0 /
b0 "
b0 )
b101 ,
b0 .
b111100 #
b111100 $
#61
b1 "
b1 )
b111101 #
b111101 $
#62
b1 %
b1 /
b10 "
b10 )
b1 .
b111110 #
b111110 $
#63
b11 "
b11 )
b111111 #
b111111 $
#64
b0 !
b0 (
b0 '
b0 +
b0 &
b0 -
b0 %
b0 /
b0 "
b0 )
b0 *
b0 ,
b0 .
b0 #
b0 $
#65
b1 "
b1 )
b1 #
b1 $
#66
b1 %
b1 /
b10 "
b10 )
b1 .
b10 #
b10 $
#67
b11 "
b11 )
b11 #
b11 $
#68
b1 &
b1 -
b10 %
b10 /
b100 "
b100 )
b1 ,
b10 .
b100 #
b100 $
#69
b101 "
b101 )
b101 #
b101 $
#70
b11 %
b11 /
b110 "
b110 )
b11 .
b110 #
b110 $
#71
b111 "
b111 )
b111 #
b111 $
#72
b1 '
b1 +
b10 &
b10 -
b100 %
b100 /
b1000 "
b1000 )
b1 *
b10 ,
b100 .
b1000 #
b1000 $
#73
b1001 "
b1001 )
b1001 #
b1001 $
#74
b1 !
b1 (
b1000 %
b1000 /
b0 "
b0 )
b101 .
b1010 #
b1010 $
#75
b1 "
b1 )
b1011 #
b1011 $
#76
b1 !
b1 (
b11 &
b11 -
b1001 %
b1001 /
b10 "
b10 )
b11 ,
b110 .
b1100 #
b1100 $
#77
b11 "
b11 )
b1101 #
b1101 $
#78
b1010 %
b1010 /
b100 "
b100 )
b111 .
b1110 #
b1110 $
#79
b101 "
b101 )
b1111 #
b1111 $
#80
b1 !
b1 (
b10 '
b10 +
b100 &
b100 -
b1011 %
b1011 /
b110 "
b110 )
b10 *
b100 ,
b1000 .
b10000 #
b10000 $
#81
b111 "
b111 )
b10001 #
b10001 $
#82
b1100 %
b1100 /
b1000 "
b1000 )
b1001 .
b10010 #
b10010 $
#83
b1001 "
b1001 )
b10011 #
b10011 $
#84
b10 !
b10 (
b1000 &
b1000 -
b0 %
b0 /
b0 "
b0 )
b101 ,
b0 .
b10100 #
b10100 $
#85
b1 "
b1 )
b10101 #
b10101 $
#86
b1 %
b1 /
b10 "
b10 )
b1 .
b10110 #
b10110 $
#87
b11 "
b11 )
b10111 #
b10111 $
#88
b10 !
b10 (
b11 '
b11 +
b1001 &
b1001 -
b10 %
b10 /
b100 "
b100 )
b11 *
b110 ,
b10 .
b11000 #
b11000 $
#89
b101 "
b101 )
b11001 #
b11001 $
#90
b11 %
b11 /
b110 "
b110 )
b11 .
b11010 #
b11010 $
#91
b111 "
b111 )
b11011 #
b11011 $
#92
b1010 &
b1010 -
b100 %
b100 /
b1000 "
b1000 )
b111 ,
b100 .
b11100 #
b11100 $
#93
b1001 "
b1001 )
b11101 #
b11101 $
#94
b11 !
b11 (
b1000 %
b1000 /
b0 "
b0 )
b101 .
b11110 #
b11110 $
#95
b1 "
b1 )
b11111 #
b11111 $
#96
b11 !
b11 (
b100 '
b100 +
b1011 &
b1011 -
b1001 %
b1001 /
b10 "
b10 )
b100 *
b1000 ,
b110 .
b100000 #
b100000 $
